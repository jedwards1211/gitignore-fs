// @flow

export interface FsStats {
  isFile(): boolean;
  isDirectory(): boolean;
}

export interface Fs {
  statSync(path: string): FsStats;
  readFileSync(
    path: string,
    options?: string | { encoding?: string, flag?: string }
  ): string;
  stat(path: string): Promise<FsStats>;
  readFile(
    path: string,
    options?: string | { encoding?: string, flag?: string, signal?: any }
  ): string;
}

export interface Git {
  getCoreExcludesFile(options: { cwd: string }): Promise<string | void>;
  getCoreExcludesFileSync(options: { cwd: string }): string | void;
}

declare export default class Gitignore {
  constructor(options?: {|
    fs?: Fs,
    git?: Git,
    env?: { [string]: string | void },
  |}): void;

  clearCache(): void;
  ignores(path: string, stats?: FsStats): Promise<boolean>;
  ignoresSync(path: string, stats?: FsStats): boolean;
}
